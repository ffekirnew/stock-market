{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nimport { Stock } from \"src/app/model/stock\";\nlet CreateStockComponent = class CreateStockComponent {\n  constructor(fb, stockService) {\n    this.fb = fb;\n    this.stockService = stockService;\n    this.confirmed = false;\n    this.exchanges = [\"NYSE\", \"NASDAQ\", \"OTHER\"];\n    this.stockForm = this.fb.group({\n      name: [null, Validators.required],\n      code: [null, Validators.required],\n      price: [0, [Validators.required, Validators.min(0)]],\n      exchangePlace: [null, Validators.required],\n      notablePeople: this.fb.array([])\n    });\n  }\n  onSubmit() {\n    if (this.stockForm.valid) {\n      this.stock = new Stock('', '', 0, 0, '');\n      this.stock.name = this.stockForm.value.name;\n      this.stock.code = this.stockForm.value.code;\n      this.stock.price = this.stockForm.value.price;\n      this.stock.previousPrice = this.stockForm.value.price;\n      this.stock.exchange = this.stockForm.value.exchangePlace;\n      console.log(this.stock);\n      const newStockCreated = this.stockService.createStock(this.stock);\n      console.log(this.stockService.getStocks());\n      if (newStockCreated) {\n        return true;\n      } else {\n        this.message = \"Stock Already Exists\";\n      }\n    }\n    return false;\n  }\n  get notablePeople() {\n    return this.stockForm.get(\"notablePeople\");\n  }\n  addNotablePerson() {\n    this.notablePeople.push(this.fb.group({\n      name: [\"\", Validators.required],\n      title: [\"\", Validators.required]\n    }));\n  }\n  removeNotablePerson(index) {\n    this.notablePeople.removeAt(index);\n  }\n  resetForm() {\n    this.stockForm.reset();\n  }\n};\nCreateStockComponent = __decorate([Component({\n  selector: \"app-create-stock\",\n  templateUrl: \"./create-stock.component.html\",\n  styleUrls: [\"./create-stock.component.css\"]\n})], CreateStockComponent);\nexport { CreateStockComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","Stock","CreateStockComponent","constructor","fb","stockService","stockForm","group","name","required","code","price","min","exchangePlace","notablePeople","array","onSubmit","valid","stock","value","previousPrice","exchange","console","log","newStockCreated","createStock","getStocks","message","get","addNotablePerson","push","title","removeNotablePerson","index","removeAt","resetForm","reset","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/ffekirnew/code/projects/stock-market/src/app/stock/create-stock/create-stock.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output } from \"@angular/core\";\nimport {\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  NgForm,\n  Validators,\n} from \"@angular/forms\";\nimport { Stock } from \"src/app/model/stock\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { StockService } from \"src/app/services/stock.service\";\n\n@Component({\n  selector: \"app-create-stock\",\n  templateUrl: \"./create-stock.component.html\",\n  styleUrls: [\"./create-stock.component.css\"],\n})\nexport class CreateStockComponent {\n  public stock: any;\n  public confirmed: Boolean = false;\n  public exchanges = [\"NYSE\", \"NASDAQ\", \"OTHER\"];\n  public stockForm: FormGroup;\n  public message: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private stockService: StockService,\n    ) {\n    this.stockForm = this.fb.group({\n      name: [null, Validators.required],\n      code: [null, Validators.required],\n      price: [0, [Validators.required, Validators.min(0)]],\n      exchangePlace: [null, Validators.required],\n      notablePeople: this.fb.array([]),\n    });\n  }\n\n  onSubmit(): boolean {\n    if (this.stockForm.valid) {\n      this.stock = new Stock('', '', 0, 0, '');\n      this.stock.name = this.stockForm.value.name;\n      this.stock.code = this.stockForm.value.code;\n      this.stock.price = this.stockForm.value.price;\n      this.stock.previousPrice = this.stockForm.value.price;\n      this.stock.exchange = this.stockForm.value.exchangePlace;\n\n      console.log(this.stock);\n      const newStockCreated = this.stockService.createStock(this.stock);\n      console.log(this.stockService.getStocks())\n      if ( newStockCreated ) {\n        return true;\n      } else {\n        this.message = \"Stock Already Exists\";\n      }\n    }\n\n    return false;\n  }\n\n  get notablePeople(): FormArray {\n    return this.stockForm.get(\"notablePeople\") as FormArray;\n  }\n\n  addNotablePerson() {\n    this.notablePeople.push(\n      this.fb.group({\n        name: [\"\", Validators.required],\n        title: [\"\", Validators.required],\n      })\n    );\n  }\n\n  removeNotablePerson(index: number) {\n    this.notablePeople.removeAt(index);\n  }\n\n  resetForm() {\n    this.stockForm.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}