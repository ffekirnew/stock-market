{"ast":null,"code":"import { Stock } from '../model/stock';\nimport * as i0 from \"@angular/core\";\nexport class StockService {\n  constructor() {\n    this.stocks = [new Stock(\"Test Stock Company\", \"TSC\", 85, 80, \"NASDAQ\"), new Stock(\"Second Stock Company\", \"SSC\", 10, 20, \"NSE\"), new Stock(\"Last Stock Company\", \"LSC\", 876, 765, \"NYSE\")];\n  }\n  getStocks() {\n    return this.stocks;\n  }\n  createStock(stock) {\n    const foundStockWithSmililarName = this.stocks.find(existing_stock => existing_stock.code === stock.code);\n    if (foundStockWithSmililarName) return false;\n    this.stocks.push(stock);\n    return true;\n  }\n}\nStockService.ɵfac = function StockService_Factory(t) {\n  return new (t || StockService)();\n};\nStockService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StockService,\n  factory: StockService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,gBAAgB;;AAKtC,OAAM,MAAOC,YAAY;EAGvBC;IACE,IAAI,CAACC,MAAM,GAAG,CACZ,IAAIH,KAAK,CAAC,oBAAoB,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EACxD,IAAIA,KAAK,CAAC,sBAAsB,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EACvD,IAAIA,KAAK,CAAC,oBAAoB,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CACzD;EACH;EAEAI,SAAS;IACP,OAAO,IAAI,CAACD,MAAM;EACpB;EAEAE,WAAW,CAACC,KAAY;IACtB,MAAMC,0BAA0B,GAAG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACC,cAAc,IAAIA,cAAc,CAACC,IAAI,KAAKJ,KAAK,CAACI,IAAI,CAAC;IAEzG,IAAIH,0BAA0B,EAC5B,OAAO,KAAK;IACd,IAAI,CAACJ,MAAM,CAACQ,IAAI,CAAEL,KAAK,CAAE;IACzB,OAAO,IAAI;EACb;;AAtBWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["Stock","StockService","constructor","stocks","getStocks","createStock","stock","foundStockWithSmililarName","find","existing_stock","code","push","factory","providedIn"],"sourceRoot":"","sources":["/home/ffekirnew/code/projects/stock-market/src/app/services/stock.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Stock } from '../model/stock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  private stocks: Stock[];\n  constructor() {\n    this.stocks = [\n      new Stock(\"Test Stock Company\", \"TSC\", 85, 80, \"NASDAQ\"),\n      new Stock(\"Second Stock Company\", \"SSC\", 10, 20, \"NSE\"),\n      new Stock(\"Last Stock Company\", \"LSC\", 876, 765, \"NYSE\"),\n    ]; \n  }\n\n  getStocks() {\n    return this.stocks;\n  }\n\n  createStock(stock: Stock): boolean {\n    const foundStockWithSmililarName = this.stocks.find(existing_stock => existing_stock.code === stock.code);\n\n    if (foundStockWithSmililarName)\n      return false;\n    this.stocks.push( stock );\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}